#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Modified keymap based on personal experience, with some improvements based on Miryoku layout.

#define QWERTY  0
#define COLEMAK 1
#define NAV     2
#define NUM     3
#define MOUSE   4
#define SYM     5
#define MEDIA   6
#define FUN     7

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hmp: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PINKY";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Combo for toggling the Colemak layout
        combo_tg_colemak {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&tog COLEMAK>;
        };

        // Combo for bluetooth control
        // (i.e. switch among the devices).
        combo_bt_next {
            timeout-ms = <50>;
            key-positions = <9 19>;
            bindings = <&bt BT_NXT>;
        };
        combo_bt_prev {
            timeout-ms = <50>;
            key-positions = <9 29>;
            bindings = <&bt BT_PRV>;
        };
        combo_bt_out_tog {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&out OUT_TOG>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
    &kp Q       &kp W       &kp E       &kp R           &kp T           &kp Y       &kp U        &kp I       &kp O       &kp P
    &hmp LGUI A &hm LALT S  &hm LCTRL D &hm LSHIFT F    &kp G           &kp H       &hm LSHIFT J &hm LCTRL K &hm LALT L  &hmp LGUI SEMI
    &kp Z       &kp X       &kp C       &kp V           &kp B           &kp N       &kp M        &kp COMMA   &kp DOT     &kp FSLH
                            &lt MEDIA ESC &lt NAV SPACE  &lt MOUSE TAB  &lt SYM RET &lt NUM BSPC &lt FUN DEL
            >;
        };

        colemak {
            bindings = <
    &kp Q       &kp W       &kp F       &kp P           &kp G           &kp J       &kp L        &kp U        &kp Y        &kp SEMI
    &hmp LGUI A &hm LALT R  &hm LCTRL S &hm LSHIFT T    &kp D           &kp H       &hm LSHIFT N &hm LCTRL E  &hm LALT I   &hmp LGUI O
    &kp Z       &kp X       &kp C       &kp V           &kp B           &kp K       &kp M        &kp COMMA    &kp DOT      &kp FSLH
                            &lt MEDIA ESC &lt NAV SPACE  &lt MOUSE TAB   &lt SYM RET &lt NUM BSPC &lt FUN DEL
            >;
        };

        nav_layer {
            bindings = <
    &none       &none           &none       &none           &none       &kp K_REDO  &kp K_PASTE &kp K_COPY  &kp K_CUT   &kp K_UNDO
    &kp LGUI    &kp LALT        &kp LCTRL   &kp LSHIFT      &none       &kp CAPS    &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT
    &none       &none           &none       &none           &none       &kp INS     &kp HOME    &kp PG_DN   &kp PG_UP    &kp END
                                &trans      &trans          &trans      &trans      &trans      &trans     
            >;
        };

       num_layer {
           bindings = <
    &kp LBKT    &kp N7    &kp N8    &kp N9    &kp RBKT    &none    &none      &none       &none       &none       
    &kp SQT     &kp N4    &kp N5    &kp N6    &kp EQUAL   &none    &kp LSHIFT &kp LCTRL   &kp LALT    &kp LGUI
    &kp GRAVE   &kp N1    &kp N2    &kp N3    &kp BSLH    &none    &none      &none       &none       &none       
                          &kp DOT   &kp N0    &kp MINUS   &trans   &trans     &trans
            >;
        };

        mouse_layer {
            bindings = <
    &none       &none           &none       &none           &none       &kp K_REDO  &kp K_PASTE &kp K_COPY  &kp K_CUT   &kp K_UNDO
    &kp LGUI    &kp LALT        &kp LCTRL   &kp LSHIFT      &none       &none       &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT
    &none       &none           &none       &none           &none       &none       &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT
                                &trans      &trans          &trans      &trans      &trans      &trans     
            >;
        };

       symbol_layer {
           bindings = <
    &kp LBRC    &kp AMPS  &kp ASTRK &kp LPAR  &kp RBRC    &none    &none     &none       &none       &none       
    &kp DQT     &kp DLLR  &kp PRCNT &kp CARET &kp PLUS    &none    &kp LSHIFT &kp LCTRL  &kp LALT    &kp LGUI
    &kp TILDE   &kp EXCL  &kp AT    &kp HASH  &kp PIPE    &none    &none     &none       &none       &none       
                          &kp LPAR  &kp RPAR  &kp UNDER   &trans   &trans    &trans
            >;
        };

        media_layer {
            bindings = <
    &none       &none       &none       &none           &none       &none       &none        &none        &none          &none
    &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHIFT      &none       &none       &kp K_PREV   &kp K_VOL_DN &kp K_VOL_UP   &kp K_NEXT
    &none       &none       &none       &none           &none       &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   &bt BT_SEL 3
                            &trans      &trans          &trans      &kp K_STOP  &kp K_PP     &kp K_MUTE     
            >;
        };

        fun_layer {
            bindings = <
    &kp F12 &kp F7  &kp F8      &kp F9      &kp PSCRN       &none   &none       &none       &none       &none
    &kp F11 &kp F4  &kp F5      &kp F6      &kp SLCK        &none   &kp LSHIFT  &kp LCTRL   &kp LALT    &kp LGUI
    &kp F10 &kp F1  &kp F2      &kp F3      &kp PAUSE_BREAK &none   &none       &none       &none       &none
                    &kp K_APP   &kp SPACE   &kp TAB         &trans  &trans      &trans
            >;
        };
    };
};
